package ${package}.${moduleName}.controller;

import java.util.Arrays;
import java.util.Map;

import oracle.jdbc.proxy.annotation.Post;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import ${package}.lemon.${moduleName}.entity.${className}Entity;
import ${package}.lemon.${moduleName}.service.${className}Service;
import ${mainPath}.common.utils.PageUtils;
import ${mainPath}.common.utils.R;



/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;



/**
 * @api {GET} http://localhost:8080/lemon/${moduleName}/${pathName}/list  查询${comments}列表数据
 * @apiVersion 1.0.0
 * @apiGroup ${moduleName}
 *
#foreach ($column in $columns)
 * @apiParam {$column.attrType} $column.attrname  $column.comments
#end
 *
 * @apiSuccess {int} code 返回码
 * @apiSuccess {String} msg  中文解释
 * @apiSuccess {Object[]} result   返回对象
 * @apiSuccess {int} totalCount  返回总数据
 * @apiSuccess {int} pageSize  每页显示书
 * @apiSuccess {int} totalPage  总页数
 * @apiSuccess {int} currPage  当前页
 * @apiSuccess {Object[]} entity 对象数组
 *
 * @apiSuccessExample {json} Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *          "code":0,
 *          "msg":"success",
 *          "result":{
 *              "totalCount": 17,
 *               "pageSize": 10,
 *               "totalPage": 2,
 *               "currPage": 1,
 *               "data":[
 *                     {
    #foreach ($column in $columns)
  *                         $column.attrname:"",
   #end
 *                     }
 *               ]
 *
 *          }
 *      }
 * @apiHeaderExample {json} Header-Example:
 *     {
 *       "token": "权限验证码"
 *     }
 *
 */
    @GetMapping("/list")
    @RequiresPermissions("${moduleName}:${pathName}:list")
    public R list(@RequestParam Map<String, Object> params){
        PageUtils page = ${classname}Service.queryPage(params);

        return R.ok().put("result", page);
    }


    /**
     * @api {GET} http://localhost:8080/lemon/${moduleName}/${pathName}/info 根据id查询${comments}数据列表
     * @apiVersion 1.0.0
     * @apiGroup ${moduleName}
     * @apiParam Integer ${pk.attrname} 主键
     *
     * @apiSuccess {int} code 返回码
     * @apiSuccess {String} msg  中文解释
     * @apiSuccess {Object[]} result   返回对象
     *
     * @apiSuccessExample {json} Success-Response:
     *     HTTP/1.1 200 OK
     *     {
     *          "code":0,
     *          "msg":"success",
     *          "result":{
                  #foreach ($column in $columns)
     *                        $column.attrname:"",
       #end
     *          }
     *      }
     */
    @GetMapping("/info/{${pk.attrname}}")
    @RequiresPermissions("${moduleName}:${pathName}:info")
    public R info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
		${className}Entity ${classname} = ${classname}Service.getById(${pk.attrname});

        return R.ok().put("result", ${classname});
    }

    /**
     * @api {POST} http://localhost:8080/lemon/${moduleName}/${pathName}/save  添加${comments}数据
     * @apiVersion 1.0.0
     * @apiGroup ${moduleName}
     *
        #foreach ($column in $columns)
         * @apiParam {$column.attrType} $column.attrname  $column.comments
        #end
     *
     * @apiSuccess {int} code 返回码
     * @apiSuccess {String} msg  中文解释
     *
     * @apiSuccessExample {json} Success-Response:
     *     HTTP/1.1 200 OK
     *     {
     *          "code":0,
     *          "msg":"success",
     *      }
     *
     */
    @PostMapping("/save")
    @RequiresPermissions("${moduleName}:${pathName}:save")
    public R save(@RequestBody ${className}Entity ${classname}){
		${classname}Service.save(${classname});

        return R.ok();
    }

    /**
     * @api {POST} http://localhost:8080/lemon/${moduleName}/${pathName}/update  修改${comments}数据
     * @apiVersion 1.0.0
     * @apiGroup ${moduleName}
     *
        #foreach ($column in $columns)
         * @apiParam {$column.attrType} $column.attrname  $column.comments
        #end
     *
     * @apiSuccess {int} code 返回码
     * @apiSuccess {String} msg  中文解释
     *
     * @apiSuccessExample {json} Success-Response:
     *     HTTP/1.1 200 OK
     *     {
     *          "code":0,
     *          "msg":"success",
     *      }
     *
     */
    @PostMapping("/update")
    @RequiresPermissions("${moduleName}:${pathName}:update")
    public R update(@RequestBody ${className}Entity ${classname}){
		${classname}Service.updateById(${classname});

        return R.ok();
    }

    /**
     * @api {POST} http://localhost:8080/lemon/${moduleName}/${pathName}/delete  删除${comments}数据
     * @apiVersion 1.0.0
     * @apiGroup ${moduleName}
     * @apiParam String[]  ${pk.attrname}s 主键集合
     * @apiSuccess {int} code 返回码
     * @apiSuccess {String} msg  中文解释
     *
     * @apiSuccessExample {json} Success-Response:
     *     HTTP/1.1 200 OK
     *     {
     *          "code":0,
     *          "msg":"success",
     *      }
     *
     */
    @PostMapping("/delete")
    @RequiresPermissions("${moduleName}:${pathName}:delete")
    public R delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s){
		${classname}Service.removeByIds(Arrays.asList(${pk.attrname}s));

        return R.ok();
    }

}
